<%= form_for(@project, :url => url_for(:action => 'update', :key => @project.key)) do |f| %>
  <% if @project.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@project.errors.count, "error") %> prohibited this project from being saved:</h2>

      <ul>
      <% @project.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<div id='popup' class='hidden'>
<div id='popup_cross' onclick="$('#popup').addClass('hidden');">X</div>
<div id='popup_content'></div>
</div>


<div class="project">
<%= @user.name if @user%>

 <table>
<tr><td>Name</td><td><%= f.text_field :name %></td></tr>
<tr><td>Description</td><td><%= f.text_field :description %></td></tr>
</table>

</div>
<div id="exp_list"></div>
<%#= render :partial => 'exp_space' %>
<div id="new_exp_button" class="button">New experiment</div>

<%  s_visibility = (@project.exps.count > 0) ? true : false %>
<div id="sample_list"></div>
<div id='btn_s'>
    Add new samples:</br>
    <input id ='snumber' type='radio' name='batch_new_s' ng-model='batch_new_s' value='number'> 
    <label for='snumber'>Number</label>
    <input id ='stext' type='radio' name='batch_new_s' ng-model='batch_new_s' value='text'> 
    <label for='stext'>Text</label>
    <input id ='sfile' type='radio' name='batch_new_s' ng-model='batch_new_s' value='file' checked='true'> 
    <label for='sfile'>File</label>

    <div id='input_s_fields'>
        <%= number_field_tag 'number_new_batch_samples', 3,  required: true, min: 1, max: 100, disabled: false, style: 'display: none' %> 
        <%= text_area_tag 'text_new_batch_samples', '', style: 'display: none' %>
        <input type='file'  id='file_new_batch_samples' onchange="onChangeSamples(event)">
    </div>
    <div id='batch_new_samples_button' class="button">Add samples</div>
</div>

<div id="measurement_list"></div>
<div id='btn_m'>
    Add new measurements:</br>
    <input id ='mnumber' type='radio' name='batch_new_m' ng-model='batch_new_m' value='number'> 
    <label for='mnumber'>Number</label>
    <input id ='mtext' type='radio' name='batch_new_m' ng-model='batch_new_m' value='text'> 
    <label for='mtext'>Text</label>
    <input id ='mfile' type='radio' name='batch_new_m' ng-model='batch_new_m' value='file' checked='true'> 
    <label for='mfile'>File</label>

    <div id='input_m_fields'>
        <%= number_field_tag 'number_new_batch_measurements', 3,  required: true, min: 1, max: 100, disabled: false, style: 'display: none' %> 
        <%= text_area_tag 'text_new_batch_measurements', '', style: 'display: none' %>
        <input type='file'  id='file_new_batch_measurements' onchange="onChangeMeasurements(event)">
    </div>
    <span id='batch_new_measurements_button' class="button" >Add measurements</span> 
</div>
<div class="actions">
    <%= f.submit %>
</div>
<% end %>


<%= javascript_tag do %>
s_file_data = '';
m_file_data = '';
// read data from file on upload for samples
function onChangeSamples(event) {
  var fileInput = document.getElementById("file_new_batch_samples")
  if (fileInput.value != '') {
    var file = fileInput.files[0];
    var textType = /text.*/;
    if (file.type.match(textType)) {
        var reader = new FileReader();
        reader.onload = function(e) {
            s_file_data = reader.result;
        }
        reader.readAsText(file);
    }
  }  
}

// read data from file on upload for measurements
function onChangeMeasurements(event) {
  var fileInput = document.getElementById("file_new_batch_measurements")
  if (fileInput.value != '') {
    var file = fileInput.files[0];
    var textType = /text.*/;
    if (file.type.match(textType)) {
        var reader = new FileReader();
        reader.onload = function(e) {
            m_file_data = reader.result;
        }
        reader.readAsText(file);
    }
  }  
}
$('input[name="batch_new_s"]').on('change', function() {
    $('#file_new_batch_samples').toggle(this.value === 'file');
    $('#text_new_batch_samples').toggle(this.value === 'text');
    $('#number_new_batch_samples').toggle(this.value === 'number');
}).change();

$('input[name="batch_new_m"]').on('change', function() {
    $('#file_new_batch_measurements').toggle(this.value === 'file');
    $('#text_new_batch_measurements').toggle(this.value === 'text');
    $('#number_new_batch_measurements').toggle(this.value === 'number');
}).change();

var project_id = <%= @project.id %>
var current_exp_id = <%= (@project.exps.count > 0) ? @project.exps.first.id : 'null' %> ;
var current_sample_id = null;
var current_measurement_id = null;
var old_exp_id = null;

function update_exp_list(){
    current_exp_id = <%= (Exp.exists?(:project_id => @project.id)) ?  @project.exps.first.id : 'null' %> ;
//    current_exp_id = <%#= (@project.exps.count > 0) ?  @project.exps.first.id : 'null' %> ;
    //alert('update exp_list' + current_exp_id);    

$.ajax({
    url: '<%= exps_path %>?project_key=<%= @project.key %>&layout=0',
    type: "GET",
    dataType: 'html',
 }).done(function(html){
    $('#exp_list').html(html);
    if (current_exp_id) { 
        update_sample_list();
    } else {
        document.getElementById('sample_list').style.display = "none";
        document.getElementById('btn_s').style.display = "none";
        document.getElementById('btn_m').style.display = "none";
    }
    // current_sample_id = null;
    old_sample_id = null;
 }).fail(function(){
 });
}

function update_sample_list(){
    //alert('update s');
$.ajax({
    url: '<%= index_slickgrid_samples_path %>?project_key=<%= @project.key %>&exp_id=' + current_exp_id + '&layout=0',
    type: "GET",
    dataType: 'html',
 }).done(function(html){
    // eval(responseText);
    $('#sample_list').html(html);
    document.getElementById('save_samples').style.display = (current_sample_id == null) ? "none" : "table-cell";
    document.getElementById('btn_s').style.display = (current_exp_id == null) ? "none" : "block";
    document.getElementById('sample_list').style.display = (current_exp_id == null) ? "none" : "block";
    update_measurement_list();
 }).fail(function(){
    alert('failed to update s list');
 });
}

function update_measurement_list(){
 if (current_sample_id == 0) {
    document.getElementById('measurement_list').style.display = "none";
    document.getElementById('btn_m').style.display = "none";
    return;
 }
 $.ajax({
    url: '<%= index_slickgrid_m_measurements_path %>?project_key=<%= @project.key %>&exp_id=' + current_exp_id + '&sample_id=' + current_sample_id + '&layout=0',
    type: "GET",
    dataType: 'html',
 }).done(function(html){
//    old_sample_id = current_sample_id;
    $('#measurement_list').html(html);
    // eval(responseText);
    //alert('update m_list: cur sample id = ' + current_sample_id + ', cur m id = ' + current_measurement_id);
    document.getElementById('save_measurements').style.display = (current_measurement_id == null) ? "none" : "table-cell";
    document.getElementById('delete_measurements').style.display = (current_measurement_id == null) ? "none" : "table-cell";
    document.getElementById('download_measurements').style.display = (current_measurement_id == null) ? "none" : "table-cell";
    document.getElementById('btn_m').style.display = (current_sample_id == null) ? "none" : "block";
    document.getElementById('measurement_list').style.display = (current_sample_id == null) ? "none" : "table-cell";
 }).fail(function(){
    alert('failed update_m_list');
 });
}

// add new experiment to the project
$('#new_exp_button').click(function(){
    call_exp_form();
    $('#popup').toggleClass('hidden');
});

function call_exp_form(){
 $.ajax({
  url: '<%= new_exp_path %>?project_key=<%= @project.key %>&layout=0',
  type: "GET",
  dataType: 'html',
 }).done(function(html){
    $('#popup_content').html(html);
}).fail(function(){
 });
}

update_exp_list()

<% end %>
